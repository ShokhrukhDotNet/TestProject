name: Deploy to Server

on:
  workflow_run:
    workflows: ["Docker CD"]
    types: [completed]
  workflow_dispatch:

env:
  APP_DIR: /opt/hr
  COMPOSE_FILE_PATH: ./docker-compose.yml

jobs:
  deploy:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Write SSH key & known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H "${{ secrets.SERVER_HOST }}" >> ~/.ssh/known_hosts

      - name: Ensure app dir exists on server
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes \
            "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}" \
            "mkdir -p '${{ env.APP_DIR }}'"

      - name: Upload docker-compose.yml
        run: |
          scp -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes \
            "${{ env.COMPOSE_FILE_PATH }}" \
            "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ env.APP_DIR }}/docker-compose.yml"

      - name: Deploy (docker login, pull, up -d)
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes \
            "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}" << 'EOF'
              set -e
              cd "${{ env.APP_DIR }}"

              # логинимся в реестр (не помешает даже для публичного)
              echo "${DOCKERHUB_TOKEN}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin || true

              docker compose pull
              docker compose up -d
              docker image prune -f
          EOF
